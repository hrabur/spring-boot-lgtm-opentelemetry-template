services:
  postgres:
    image: "postgres:latest"
    environment:
      - "POSTGRES_DB=coupon"
      - "POSTGRES_USER=myuser"
      - "POSTGRES_PASSWORD=secret"
    ports:
      - "5432:5432"

  kafka:
    image: apache/kafka:latest
    ports:
      - 19092:19092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT_HOST://:19092, PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://localhost:19092,PLAINTEXT://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CLUSTER_ID: local-kafka
      # KAFKA_JMX_PORT: 9997
      # KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=9997 -Djava.rmi.server.hostname=kafka -Dcom.sun.management.jmxremote.local.only=false

  akhq:
    image: tchiotludo/akhq
    restart: unless-stopped
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:9092"

    ports:
      - 9090:8080
    depends_on:
      - kafka

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    volumes:
      - ./otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml

  lgtm:
    image: grafana/otel-lgtm
    ports:
      - "4317:4317"
      - "4318:4318"
      - "3000:3000"

  coupon:
    image: "marttp/coupon-lgtm:latest"
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/coupon
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: secret
      OTEL_SERVICE_NAME: "coupon"
      OTEL_EXPORTER_OTLP_ENDPOINT: http://lgtm:4317
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
      OTEL_RESOURCE_ATTRIBUTES: service.name=coupon,service.instance.id=coupon,env=dev
      # Logs are disabled by default
      OTEL_LOGS_EXPORTER: "otlp"
      OTEL_METRIC_EXPORT_INTERVAL: 500
      OTEL_BSP_SCHEDULE_DELAY: 500
    depends_on:
      - postgres
      - lgtm
